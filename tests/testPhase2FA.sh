#!/bin/bash

# üîê LogOn Password Manager - Test Phase 2FA Login
# Validation du syst√®me d'authentification √† deux facteurs lors de la connexion

set -e

echo "üîê Test Phase 2FA - Validation du syst√®me d'authentification √† deux facteurs"
echo "=========================================================================="

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
        return 1
    fi
}

# Fonction pour afficher les informations
print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Fonction pour afficher les avertissements
print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

echo
print_info "Phase 1: V√©rification des fichiers de l'interface 2FA"

# V√©rification des fichiers principaux
test_files=(
    "frontend/pages/login.vue"
    "frontend/pages/two-factor-verify.vue"
    "frontend/composables/useAuth.ts"
    "frontend/types/auth.ts"
)

for file in "${test_files[@]}"; do
    if [ -f "$file" ]; then
        print_result 0 "Fichier $file existe"
    else
        print_result 1 "Fichier $file manquant"
    fi
done

echo
print_info "Phase 2: V√©rification des composants shadcn-vue"

# V√©rification des composants UI n√©cessaires
ui_components=(
    "frontend/components/ui/pin-input"
    "frontend/components/ui/card"
    "frontend/components/ui/button"
    "frontend/components/ui/label"
)

for component in "${ui_components[@]}"; do
    if [ -d "$component" ]; then
        print_result 0 "Composant $component existe"
    else
        print_warning "Composant $component manquant - peut √™tre n√©cessaire"
    fi
done

echo
print_info "Phase 3: V√©rification du code TypeScript"

# V√©rification que les fichiers TypeScript sont syntaxiquement corrects
if command -v npx &> /dev/null; then
    print_info "V√©rification de la syntaxe TypeScript..."
    
    # V√©rification des types
    if grep -q "requiresTwoFactor" frontend/types/auth.ts; then
        print_result 0 "Type AuthResponse mis √† jour avec requiresTwoFactor"
    else
        print_result 1 "Type AuthResponse n'a pas √©t√© mis √† jour"
    fi
    
    # V√©rification de la m√©thode verifyTwoFactor
    if grep -q "verifyTwoFactor" frontend/composables/useAuth.ts; then
        print_result 0 "M√©thode verifyTwoFactor ajout√©e au composable useAuth"
    else
        print_result 1 "M√©thode verifyTwoFactor manquante dans useAuth"
    fi
    
    # V√©rification de la redirection dans login.vue
    if grep -q "two-factor-verify" frontend/pages/login.vue; then
        print_result 0 "Redirection vers two-factor-verify configur√©e"
    else
        print_result 1 "Redirection vers two-factor-verify manquante"
    fi
else
    print_warning "npx non disponible - impossible de v√©rifier la syntaxe TypeScript"
fi

echo
print_info "Phase 4: V√©rification de la structure de la page 2FA"

# V√©rification du contenu de la page 2FA
if [ -f "frontend/pages/two-factor-verify.vue" ]; then
    
    # V√©rification du composant PinInput
    if grep -q "PinInput" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Composant PinInput utilis√© dans la page 2FA"
    else
        print_result 1 "Composant PinInput manquant dans la page 2FA"
    fi
    
    # V√©rification du timer
    if grep -q "timeRemaining" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Timer d'expiration impl√©ment√©"
    else
        print_result 1 "Timer d'expiration manquant"
    fi
    
    # V√©rification de la validation
    if grep -q "length !== 6" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Validation du code √† 6 chiffres impl√©ment√©e"
    else
        print_result 1 "Validation du code √† 6 chiffres manquante"
    fi
    
    # V√©rification du bouton retour
    if grep -q "goBack" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Bouton retour impl√©ment√©"
    else
        print_result 1 "Bouton retour manquant"
    fi
else
    print_result 1 "Page two-factor-verify.vue manquante"
fi

echo
print_info "Phase 5: V√©rification de la s√©curit√©"

# V√©rification des bonnes pratiques de s√©curit√©
if [ -f "frontend/pages/two-factor-verify.vue" ]; then
    
    # V√©rification que le code est vid√© en cas d'erreur
    if grep -q "verificationCode.value = ''" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Code vid√© en cas d'erreur (bonne pratique de s√©curit√©)"
    else
        print_warning "Code non vid√© en cas d'erreur"
    fi
    
    # V√©rification du middleware guest
    if grep -q "middleware: 'guest'" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Middleware guest configur√©"
    else
        print_result 1 "Middleware guest manquant"
    fi
    
    # V√©rification que l'email est en query param
    if grep -q "route.query.email" frontend/pages/two-factor-verify.vue; then
        print_result 0 "Email r√©cup√©r√© depuis les query params"
    else
        print_result 1 "Email non r√©cup√©r√© depuis les query params"
    fi
fi

echo
print_info "Phase 6: Recommandations pour le d√©veloppement"

echo -e "${GREEN}‚ú® Fonctionnalit√©s impl√©ment√©es:${NC}"
echo "  ‚Ä¢ Page de v√©rification 2FA avec PinInput shadcn-vue"
echo "  ‚Ä¢ Timer d'expiration des codes"
echo "  ‚Ä¢ Validation des codes √† 6 chiffres"
echo "  ‚Ä¢ Gestion des erreurs avec messages sp√©cifiques"
echo "  ‚Ä¢ Redirection automatique apr√®s connexion"
echo "  ‚Ä¢ Bouton retour vers la page de connexion"

echo
echo -e "${YELLOW}üìã Prochaines √©tapes recommand√©es:${NC}"
echo "  1. Installer le composant pin-input de shadcn-vue si non pr√©sent"
echo "  2. Impl√©menter les endpoints backend pour la 2FA"
echo "  3. Tester le flux complet de connexion avec 2FA"
echo "  4. Ajouter les tests unitaires et d'int√©gration"
echo "  5. Configurer les codes de r√©cup√©ration de sauvegarde"

echo
echo -e "${GREEN}üéâ Test Phase 2FA termin√© avec succ√®s!${NC}"
echo "Le syst√®me d'authentification √† deux facteurs est pr√™t pour les tests"
